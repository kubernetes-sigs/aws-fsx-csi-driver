cluster:
  kops:
    stateFile: s3://k8s-kops-csi-e2e
    zones: us-west-2a
    nodeCount: 3
    nodeSize: c5.large
    kubernetesVersion: 1.15.3
    iamPolicies: |2
        additionalPolicies:
          node: |
            [
              {
                "Effect": "Allow",
                "Action": [
                  "iam:CreateServiceLinkedRole",
                  "iam:AttachRolePolicy",
                  "iam:PutRolePolicy"
                ],
                "Resource": "arn:aws:iam::*:role/aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListBucket",
                  "fsx:CreateFileSystem",
                  "fsx:DeleteFileSystem",
                  "fsx:DescribeFileSystems"
                ],
                "Resource": ["*"]
              }
            ]

build: |
  eval $(aws ecr get-login --region us-west-2 --no-include-email)
  AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
  IMAGE_TAG={{TEST_ID}}
  IMAGE_NAME=$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/aws-fsx-csi-driver
  docker build -t $IMAGE_NAME:$IMAGE_TAG .
  docker push $IMAGE_NAME:$IMAGE_TAG

install: |
  HELM_VERSION=3.1.1
  
  echo "Installing Helm version: ${HELM_VERSION}"
  wget "https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz"
  tar -zxvf "helm-v${HELM_VERSION}-linux-amd64.tar.gz"
  mv linux-amd64/helm /usr/local/bin/helm

  echo "Deploying driver"
  AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
  IMAGE_TAG={{TEST_ID}}
  IMAGE_NAME=$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/aws-fsx-csi-driver

  helm upgrade aws-fsx-csi-driver \
      --install helm/ \
      --namespace kube-system \
      -f helm/values.yaml \
      --set controllerService.fsxPlugin.image.repository=$IMAGE_NAME \
      --set controllerService.fsxPlugin.image.tag=$IMAGE_TAG \
      --set nodeService.fsxPlugin.image.repository=$IMAGE_NAME \
      --set nodeService.fsxPlugin.image.tag=$IMAGE_TAG

uninstall: |
  echo "Removing driver"
  helm delete aws-fsx-csi-driver --namespace kube-system

test: |
  go install github.com/onsi/ginkgo/ginkgo
  export KUBECONFIG=$HOME/.kube/config
  cluster_name=test-cluster-{{TEST_ID}}.k8s.local
  skip="\[Disruptive\]\
  |subPath.should.be.able.to.unmount.after.the.subpath.directory.is.deleted\
  |should.not.mount./.map.unused.volumes.in.a.pod"
  ginkgo -p -nodes=8 -skip=$skip -v ./tests/e2e -- --cluster-name=$cluster_name --region=us-west-2 --report-dir=$ARTIFACTS
